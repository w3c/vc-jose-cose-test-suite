{
  "matrices": [
    {
      "title": "JOSE Tests",
      "ctx": null,
      "suites": [
        {
          "title": "Mavennet",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "1. JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:8b3f80f1-891e-47e4-87a9-4cd3ac5bee19",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17454,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "1. JWT Basic Credential Issuance"
              },
              "duration": 17306,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2. JWT Credential Issuance with All Optional Fields",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:caa465c9-b08c-4181-9104-8e40781d5646",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18263,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "2. JWT Credential Issuance with All Optional Fields"
              },
              "duration": 807,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3. JWT Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:ad1e40ba-33d7-4708-ab6d-dd5c1d9e389d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "3. JWT Basic Presentation Issuance"
              },
              "duration": 758,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4. JWT Complex Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:84cb3e42-bb26-4405-9fe4-bf4a22ad5e6e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19779,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "4. JWT Complex Presentation Issuance"
              },
              "duration": 758,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "5. JWT Issuance with Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:347ade66-a50c-4c80-a2a3-899f0e539c44",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20589,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "5. JWT Issuance with Unknown Extensions"
              },
              "duration": 809,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "6. JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:27277d4e-9b5c-478a-bc18-15b0c023ca9a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21345,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "6. JWT Basic Credential Verification"
              },
              "duration": 756,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "7. JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:0ef79a9b-574a-4657-8733-42905f5b6f76",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22103,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "7. JWT Presentation Verification"
              },
              "duration": 758,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "8. JWT Issuer Match Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:5135743a-04b3-49a0-b1ca-69eb8b4277a0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22856,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "8. JWT Issuer Match Verification"
              },
              "duration": 753,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "9. JWT Verification With Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:26c4264e-e60b-4385-bf7c-f54a6a6a74f7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23603,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "9. JWT Verification With Unknown Extensions"
              },
              "duration": 747,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "10. JWT Unsecured Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:8d2edf98-e140-4494-8c26-31df3626f1d0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24355,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "10. JWT Unsecured Credential Verification"
              },
              "duration": 752,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "11. JWT Unsecured Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:1a2e11bd-e986-4f1e-948c-be922b366bb8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25110,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "11. JWT Unsecured Presentation Verification"
              },
              "duration": 755,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "12. JWT Credential with an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:7223e98c-b3aa-44b3-86f4-fdabf62cda01",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25895,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "12. JWT Credential with an Invalid Signature"
              },
              "duration": 785,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "13. JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:a2c9befd-56da-4102-901c-ce745175f630",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26639,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "13. JWT Credential with an Invalid Media Type"
              },
              "duration": 744,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "14. JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:e34dd6e3-25f6-41b8-a1d3-1c233a5aa49b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "14. JWT Presentation with an Invalid Media Type"
              },
              "duration": 760,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "15. JWT Credential with vc and/or vp Claims",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:9635e9f8-a681-44e0-89a9-a7e65c948579",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "15. JWT Credential with vc and/or vp Claims"
              },
              "duration": 759,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "16. JWT Presentation with Invalid Credential",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:a8f28667-08fb-4adf-a806-029affc15589",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28932,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "16. JWT Presentation with Invalid Credential"
              },
              "duration": 774,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Z-xuIny4V3j7pZztgGJ3A",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:8b88331a-4d5d-4b1f-aa59-8ead7acd53b8"
        },
        {
          "title": "Tradeverifyd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "1. JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3861dc7c-d848-4834-a4de-deeabdfbd324",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "1. JWT Basic Credential Issuance"
              },
              "duration": 5090,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2. JWT Credential Issuance with All Optional Fields",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:4975ae3b-0d51-4307-9813-64249b2785e5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35278,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "2. JWT Credential Issuance with All Optional Fields"
              },
              "duration": 1256,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3. JWT Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:343587e7-8d6b-4a80-ad84-3873f69eaef3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36567,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "3. JWT Basic Presentation Issuance"
              },
              "duration": 1290,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4. JWT Complex Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:465ca22f-6747-44c6-b8a3-1fbfe9301be2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "4. JWT Complex Presentation Issuance"
              },
              "duration": 1278,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "5. JWT Issuance with Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:c708eaa4-66c5-48b7-bc0f-2c0a62caef28",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39098,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "5. JWT Issuance with Unknown Extensions"
              },
              "duration": 1252,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "6. JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3a3529f6-f9e6-4713-b022-946214ff6b34",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "6. JWT Basic Credential Verification"
              },
              "duration": 1258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "7. JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:e693bf1f-6733-4282-aff9-81308ff22f25",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "7. JWT Presentation Verification"
              },
              "duration": 1255,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "8. JWT Issuer Match Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:6c17abbd-e0d6-479a-8f17-229523529397",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42879,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "8. JWT Issuer Match Verification"
              },
              "duration": 1268,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "9. JWT Verification With Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:4c45e62c-eed8-4c3b-a342-7599c948940e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44129,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "9. JWT Verification With Unknown Extensions"
              },
              "duration": 1250,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "10. JWT Unsecured Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:5d7751ca-d6db-4c64-a416-8a7b74d988ed",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45366,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "10. JWT Unsecured Credential Verification"
              },
              "duration": 1237,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "11. JWT Unsecured Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:665c8760-08a2-4d91-a029-644b0036935c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46621,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "11. JWT Unsecured Presentation Verification"
              },
              "duration": 1255,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "12. JWT Credential with an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:2cb7d1d0-2718-4784-a8cf-58d467488c53",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47879,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "12. JWT Credential with an Invalid Signature"
              },
              "duration": 1258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "13. JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:e8e64734-bc39-4123-86b5-8be070337d18",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49130,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "13. JWT Credential with an Invalid Media Type"
              },
              "duration": 1251,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "14. JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:f4d35550-725f-465c-8bd8-7d3717a767c3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50389,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "14. JWT Presentation with an Invalid Media Type"
              },
              "duration": 1259,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "15. JWT Credential with vc and/or vp Claims",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3fe11e69-240d-4984-a0b0-dd5392f411cf",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51668,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "15. JWT Credential with vc and/or vp Claims"
              },
              "duration": 1280,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "16. JWT Presentation with Invalid Credential",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3683df9a-681e-493f-91bf-11b85061d731",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52933,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "16. JWT Presentation with Invalid Credential"
              },
              "duration": 1264,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Z-xuIny4V3j7pZztgGJ3A",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:40c3796b-1b7a-4ac1-952f-72833da925eb"
        },
        {
          "title": "decentralgabe",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "1. JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:5d8cd6dd-088d-470d-8b41-d2e7ee340af6",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87649,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "1. JWT Basic Credential Issuance"
              },
              "duration": 34716,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2. JWT Credential Issuance with All Optional Fields",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:3d67c0b2-b30c-4442-964b-a193704bed87",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88052,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "2. JWT Credential Issuance with All Optional Fields"
              },
              "duration": 403,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3. JWT Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:8cf2caa7-3147-4e40-86ec-6a15a221554c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88463,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "3. JWT Basic Presentation Issuance"
              },
              "duration": 411,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4. JWT Complex Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:d86eef21-54b6-4e6d-b44a-c51a3d8134c7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88889,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "4. JWT Complex Presentation Issuance"
              },
              "duration": 427,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "5. JWT Issuance with Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:9fab0c8f-5f26-4ec1-80af-7efddd43838a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 89290,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "5. JWT Issuance with Unknown Extensions"
              },
              "duration": 401,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "6. JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:ff2df625-6640-4b09-b188-e24f6abc0443",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 89699,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "6. JWT Basic Credential Verification"
              },
              "duration": 408,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "7. JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:65dba610-31fa-40db-b5f3-2ab1ad3692d8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 90103,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "7. JWT Presentation Verification"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "8. JWT Issuer Match Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:f7b30cda-fcdd-48f4-abe7-fa555f11c01d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 90516,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "8. JWT Issuer Match Verification"
              },
              "duration": 414,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "9. JWT Verification With Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:b27b7b3f-6b21-4e9d-83a7-265d04b3fd01",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 90915,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "9. JWT Verification With Unknown Extensions"
              },
              "duration": 398,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "10. JWT Unsecured Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:4a3d95b6-fa81-45ce-b69f-acb259b9b910",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 91314,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "10. JWT Unsecured Credential Verification"
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "11. JWT Unsecured Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:251bab73-b4c8-4960-ba19-dd3ba1bef53a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 91722,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "11. JWT Unsecured Presentation Verification"
              },
              "duration": 408,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "12. JWT Credential with an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:e1cac3f6-2ac8-4043-bada-d658dee7d4dc",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92122,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "12. JWT Credential with an Invalid Signature"
              },
              "duration": 400,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "13. JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:cd4cd2d0-d1c0-467f-9835-8ef89ccf2feb",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92521,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "13. JWT Credential with an Invalid Media Type"
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "14. JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:cc4a8063-2e40-44a1-9795-dcf527a89b3a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92925,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "14. JWT Presentation with an Invalid Media Type"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "15. JWT Credential with vc and/or vp Claims",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:1bca180c-388c-4462-aa5a-af89c6746fa8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "15. JWT Credential with vc and/or vp Claims"
              },
              "duration": 401,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "16. JWT Presentation with Invalid Credential",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:e77da4e7-bac0-4993-8838-8a425997dbff",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93728,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "16. JWT Presentation with Invalid Credential"
              },
              "duration": 403,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Z-xuIny4V3j7pZztgGJ3A",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:8ad5df64-2d58-446b-9872-980eb62a3d8d"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "GUXm2W8kDCKMza6Xf-QB4",
      "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:ebb77d40-66f6-4c7c-9841-2e3c6e2d0c75",
      "columns": [
        "Mavennet",
        "Tradeverifyd",
        "decentralgabe"
      ],
      "rows": [
        {
          "id": "1. JWT Basic Credential Issuance",
          "cells": [
            {
              "type": "test",
              "title": "1. JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:8b3f80f1-891e-47e4-87a9-4cd3ac5bee19",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17454,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "1. JWT Basic Credential Issuance"
              },
              "duration": 17306,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "1. JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3861dc7c-d848-4834-a4de-deeabdfbd324",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "1. JWT Basic Credential Issuance"
              },
              "duration": 5090,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "1. JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:5d8cd6dd-088d-470d-8b41-d2e7ee340af6",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 87649,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "1. JWT Basic Credential Issuance"
              },
              "duration": 34716,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "2. JWT Credential Issuance with All Optional Fields",
          "cells": [
            {
              "type": "test",
              "title": "2. JWT Credential Issuance with All Optional Fields",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:caa465c9-b08c-4181-9104-8e40781d5646",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18263,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "2. JWT Credential Issuance with All Optional Fields"
              },
              "duration": 807,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2. JWT Credential Issuance with All Optional Fields",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:4975ae3b-0d51-4307-9813-64249b2785e5",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35278,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "2. JWT Credential Issuance with All Optional Fields"
              },
              "duration": 1256,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "2. JWT Credential Issuance with All Optional Fields",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:3d67c0b2-b30c-4442-964b-a193704bed87",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88052,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "2. JWT Credential Issuance with All Optional Fields"
              },
              "duration": 403,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "3. JWT Basic Presentation Issuance",
          "cells": [
            {
              "type": "test",
              "title": "3. JWT Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:ad1e40ba-33d7-4708-ab6d-dd5c1d9e389d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "3. JWT Basic Presentation Issuance"
              },
              "duration": 758,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3. JWT Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:343587e7-8d6b-4a80-ad84-3873f69eaef3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36567,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "3. JWT Basic Presentation Issuance"
              },
              "duration": 1290,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "3. JWT Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:8cf2caa7-3147-4e40-86ec-6a15a221554c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88463,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "3. JWT Basic Presentation Issuance"
              },
              "duration": 411,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "4. JWT Complex Presentation Issuance",
          "cells": [
            {
              "type": "test",
              "title": "4. JWT Complex Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:84cb3e42-bb26-4405-9fe4-bf4a22ad5e6e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19779,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "4. JWT Complex Presentation Issuance"
              },
              "duration": 758,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4. JWT Complex Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:465ca22f-6747-44c6-b8a3-1fbfe9301be2",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37846,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "4. JWT Complex Presentation Issuance"
              },
              "duration": 1278,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "4. JWT Complex Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:d86eef21-54b6-4e6d-b44a-c51a3d8134c7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 88889,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "4. JWT Complex Presentation Issuance"
              },
              "duration": 427,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "5. JWT Issuance with Unknown Extensions",
          "cells": [
            {
              "type": "test",
              "title": "5. JWT Issuance with Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:347ade66-a50c-4c80-a2a3-899f0e539c44",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20589,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "5. JWT Issuance with Unknown Extensions"
              },
              "duration": 809,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "5. JWT Issuance with Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:c708eaa4-66c5-48b7-bc0f-2c0a62caef28",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39098,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "5. JWT Issuance with Unknown Extensions"
              },
              "duration": 1252,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "5. JWT Issuance with Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:9fab0c8f-5f26-4ec1-80af-7efddd43838a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 89290,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "5. JWT Issuance with Unknown Extensions"
              },
              "duration": 401,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "6. JWT Basic Credential Verification",
          "cells": [
            {
              "type": "test",
              "title": "6. JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:27277d4e-9b5c-478a-bc18-15b0c023ca9a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21345,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "6. JWT Basic Credential Verification"
              },
              "duration": 756,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "6. JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3a3529f6-f9e6-4713-b022-946214ff6b34",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40356,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "6. JWT Basic Credential Verification"
              },
              "duration": 1258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "6. JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:ff2df625-6640-4b09-b188-e24f6abc0443",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 89699,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "6. JWT Basic Credential Verification"
              },
              "duration": 408,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "7. JWT Presentation Verification",
          "cells": [
            {
              "type": "test",
              "title": "7. JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:0ef79a9b-574a-4657-8733-42905f5b6f76",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22103,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "7. JWT Presentation Verification"
              },
              "duration": 758,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "7. JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:e693bf1f-6733-4282-aff9-81308ff22f25",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "7. JWT Presentation Verification"
              },
              "duration": 1255,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "7. JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:65dba610-31fa-40db-b5f3-2ab1ad3692d8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 90103,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "7. JWT Presentation Verification"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "8. JWT Issuer Match Verification",
          "cells": [
            {
              "type": "test",
              "title": "8. JWT Issuer Match Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:5135743a-04b3-49a0-b1ca-69eb8b4277a0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22856,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "8. JWT Issuer Match Verification"
              },
              "duration": 753,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "8. JWT Issuer Match Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:6c17abbd-e0d6-479a-8f17-229523529397",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42879,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "8. JWT Issuer Match Verification"
              },
              "duration": 1268,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "8. JWT Issuer Match Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:f7b30cda-fcdd-48f4-abe7-fa555f11c01d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 90516,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "8. JWT Issuer Match Verification"
              },
              "duration": 414,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "9. JWT Verification With Unknown Extensions",
          "cells": [
            {
              "type": "test",
              "title": "9. JWT Verification With Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:26c4264e-e60b-4385-bf7c-f54a6a6a74f7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23603,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "9. JWT Verification With Unknown Extensions"
              },
              "duration": 747,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "9. JWT Verification With Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:4c45e62c-eed8-4c3b-a342-7599c948940e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44129,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "9. JWT Verification With Unknown Extensions"
              },
              "duration": 1250,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "9. JWT Verification With Unknown Extensions",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:b27b7b3f-6b21-4e9d-83a7-265d04b3fd01",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 90915,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "9. JWT Verification With Unknown Extensions"
              },
              "duration": 398,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "10. JWT Unsecured Credential Verification",
          "cells": [
            {
              "type": "test",
              "title": "10. JWT Unsecured Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:8d2edf98-e140-4494-8c26-31df3626f1d0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24355,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "10. JWT Unsecured Credential Verification"
              },
              "duration": 752,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "10. JWT Unsecured Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:5d7751ca-d6db-4c64-a416-8a7b74d988ed",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45366,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "10. JWT Unsecured Credential Verification"
              },
              "duration": 1237,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "10. JWT Unsecured Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:4a3d95b6-fa81-45ce-b69f-acb259b9b910",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 91314,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "10. JWT Unsecured Credential Verification"
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "11. JWT Unsecured Presentation Verification",
          "cells": [
            {
              "type": "test",
              "title": "11. JWT Unsecured Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:1a2e11bd-e986-4f1e-948c-be922b366bb8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25110,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "11. JWT Unsecured Presentation Verification"
              },
              "duration": 755,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "11. JWT Unsecured Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:665c8760-08a2-4d91-a029-644b0036935c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46621,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "11. JWT Unsecured Presentation Verification"
              },
              "duration": 1255,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "11. JWT Unsecured Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:251bab73-b4c8-4960-ba19-dd3ba1bef53a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 91722,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "11. JWT Unsecured Presentation Verification"
              },
              "duration": 408,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "12. JWT Credential with an Invalid Signature",
          "cells": [
            {
              "type": "test",
              "title": "12. JWT Credential with an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:7223e98c-b3aa-44b3-86f4-fdabf62cda01",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25895,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "12. JWT Credential with an Invalid Signature"
              },
              "duration": 785,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "12. JWT Credential with an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:2cb7d1d0-2718-4784-a8cf-58d467488c53",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47879,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "12. JWT Credential with an Invalid Signature"
              },
              "duration": 1258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "12. JWT Credential with an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:e1cac3f6-2ac8-4043-bada-d658dee7d4dc",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92122,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "12. JWT Credential with an Invalid Signature"
              },
              "duration": 400,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "13. JWT Credential with an Invalid Media Type",
          "cells": [
            {
              "type": "test",
              "title": "13. JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:a2c9befd-56da-4102-901c-ce745175f630",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26639,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "13. JWT Credential with an Invalid Media Type"
              },
              "duration": 744,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "13. JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:e8e64734-bc39-4123-86b5-8be070337d18",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49130,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "13. JWT Credential with an Invalid Media Type"
              },
              "duration": 1251,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "13. JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:cd4cd2d0-d1c0-467f-9835-8ef89ccf2feb",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92521,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "13. JWT Credential with an Invalid Media Type"
              },
              "duration": 399,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "14. JWT Presentation with an Invalid Media Type",
          "cells": [
            {
              "type": "test",
              "title": "14. JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:e34dd6e3-25f6-41b8-a1d3-1c233a5aa49b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "14. JWT Presentation with an Invalid Media Type"
              },
              "duration": 760,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "14. JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:f4d35550-725f-465c-8bd8-7d3717a767c3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50389,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "14. JWT Presentation with an Invalid Media Type"
              },
              "duration": 1259,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "14. JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:cc4a8063-2e40-44a1-9795-dcf527a89b3a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 92925,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "14. JWT Presentation with an Invalid Media Type"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "15. JWT Credential with vc and/or vp Claims",
          "cells": [
            {
              "type": "test",
              "title": "15. JWT Credential with vc and/or vp Claims",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:9635e9f8-a681-44e0-89a9-a7e65c948579",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "15. JWT Credential with vc and/or vp Claims"
              },
              "duration": 759,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "15. JWT Credential with vc and/or vp Claims",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3fe11e69-240d-4984-a0b0-dd5392f411cf",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51668,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "15. JWT Credential with vc and/or vp Claims"
              },
              "duration": 1280,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "15. JWT Credential with vc and/or vp Claims",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:1bca180c-388c-4462-aa5a-af89c6746fa8",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93326,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "15. JWT Credential with vc and/or vp Claims"
              },
              "duration": 401,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "16. JWT Presentation with Invalid Credential",
          "cells": [
            {
              "type": "test",
              "title": "16. JWT Presentation with Invalid Credential",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "OfTs0q5CkHM5tFutUf0WY",
              "ctx": null,
              "_testId": "urn:uuid:a8f28667-08fb-4adf-a806-029affc15589",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28932,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "16. JWT Presentation with Invalid Credential"
              },
              "duration": 774,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "16. JWT Presentation with Invalid Credential",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "sA-UMv34KeTpWriciBXyL",
              "ctx": null,
              "_testId": "urn:uuid:3683df9a-681e-493f-91bf-11b85061d731",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52933,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "16. JWT Presentation with Invalid Credential"
              },
              "duration": 1264,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "16. JWT Presentation with Invalid Credential",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "gUIAcd4pjhx-zcQq8S_yb",
              "ctx": null,
              "_testId": "urn:uuid:e77da4e7-bac0-4993-8838-8a425997dbff",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93728,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "16. JWT Presentation with Invalid Credential"
              },
              "duration": 403,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "SD-JWT Tests",
      "ctx": null,
      "suites": [
        {
          "title": "Mavennet",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "17. SD-JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:a6d5eed6-93e5-4512-88a4-6f826c2c13cc",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93880,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "18. SD-JWT Complex Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:b4f1d441-1415-4e0b-99f7-fc5a8a4e039e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93880,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "19. SD-JWT Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:c74430b4-2a5a-4c53-9848-b02ef6108560",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "20. SD-JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:ffbf11dc-3e6c-4538-b5e0-4fd6655603dd",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "21. SD-JWT Complex Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:4adedbb4-fe56-4470-857e-8c4140e731aa",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "22. SD-JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:85b96ed9-1e54-4934-83e3-8b27cd91fc51",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "23. SD-JWT Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:7830d256-a518-4432-b684-5ca1fa11380b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "24. SD-JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:b2b61e15-48a7-40af-a505-d38ecc7b79e0",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "25. SD-JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:a32b18b3-ca95-4210-ada6-4780e7709d76",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            },
            {
              "type": "test",
              "title": "26. SD-JWT Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": true,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "vT36M8AvleYBSrpRBs7xE",
              "ctx": null,
              "_testId": "urn:uuid:d520799e-39c1-4f61-94f2-5ec67929b707",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 93881,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 0,
              "state": "pending"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lbBiaeMZWyVqZjkCW3cJO",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:b054370f-256f-4a5a-94ee-674ac648308e"
        },
        {
          "title": "Tradeverifyd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "17. SD-JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:e3f59802-fff2-498e-94b0-24e5a8de8e29",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 95001,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "17. SD-JWT Basic Credential Issuance"
              },
              "duration": 1270,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "18. SD-JWT Complex Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:dc26e4d7-8f44-4869-9dae-296df35528ab",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 96276,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "18. SD-JWT Complex Credential Issuance"
              },
              "duration": 1275,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "19. SD-JWT Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:64d370fa-9f83-452b-bb3e-7dbfe273436f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97549,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "19. SD-JWT Presentation Issuance"
              },
              "duration": 1273,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "20. SD-JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:0697280b-d299-43e5-9228-e6c4965f2c42",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 98811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "20. SD-JWT Basic Credential Verification"
              },
              "duration": 1262,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "21. SD-JWT Complex Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:799e7db4-8c2a-45ce-8185-7ce4ec77b821",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100069,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "21. SD-JWT Complex Credential Verification"
              },
              "duration": 1258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "22. SD-JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:b2bcbd35-f5a3-4d6d-ac15-11e38f6a360c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 101353,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "22. SD-JWT Presentation Verification"
              },
              "duration": 1284,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "23. SD-JWT Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:46a8076b-a7b3-4b30-9daf-d881e9876685",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 102603,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "23. SD-JWT Credential With an Invalid Signature"
              },
              "duration": 1250,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "24. SD-JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:73fab0df-42e1-4f05-bb00-7719cd4161c4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "24. SD-JWT Credential with an Invalid Media Type"
              },
              "duration": 1270,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "25. SD-JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:d1d4d10f-2017-4f4d-83dc-93ea43eabceb",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105128,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "25. SD-JWT Presentation with an Invalid Media Type"
              },
              "duration": 1255,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "26. SD-JWT Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:ae565d78-f57f-4ec4-9df0-1e9fb2cf85a7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 106398,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "26. SD-JWT Presentation with Invalid Credentials"
              },
              "duration": 1270,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lbBiaeMZWyVqZjkCW3cJO",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:b7c03d99-5066-4b6e-ab5e-5b7da98bc441"
        },
        {
          "title": "decentralgabe",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "17. SD-JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:d0ca9421-6469-4882-9407-13a81fc04d23",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 106800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "17. SD-JWT Basic Credential Issuance"
              },
              "duration": 402,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "18. SD-JWT Complex Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:5d190795-0d5f-4ded-892e-7d9a0f4df185",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107207,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "18. SD-JWT Complex Credential Issuance"
              },
              "duration": 406,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "19. SD-JWT Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:9650ad22-6470-4e1e-b5c8-9fe5745bb489",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "19. SD-JWT Presentation Issuance"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "20. SD-JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:8517049b-d305-4b09-91c7-4fee0e3fc667",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108011,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "20. SD-JWT Basic Credential Verification"
              },
              "duration": 400,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "21. SD-JWT Complex Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:4deaa794-de80-473c-ac13-41c1c2535031",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "21. SD-JWT Complex Credential Verification"
              },
              "duration": 405,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "22. SD-JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:142c41f6-1007-4522-a434-070c28378111",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108821,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "22. SD-JWT Presentation Verification"
              },
              "duration": 405,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "23. SD-JWT Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:2cd0ae69-c493-4b61-a2ed-3b6885991a3e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109234,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "23. SD-JWT Credential With an Invalid Signature"
              },
              "duration": 413,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "24. SD-JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:2705eff9-8aa8-435a-aed2-6555a53be221",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "24. SD-JWT Credential with an Invalid Media Type"
              },
              "duration": 401,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "25. SD-JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:71e86bfc-74cf-4bd4-a17c-9c3d7ee7bc8a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110041,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "25. SD-JWT Presentation with an Invalid Media Type"
              },
              "duration": 406,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "26. SD-JWT Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:d3da5bb9-72b3-465b-a7cd-af6e5398f9f3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110444,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "26. SD-JWT Presentation with Invalid Credentials"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "lbBiaeMZWyVqZjkCW3cJO",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:3cde30ad-4769-477a-aa02-44454dec1d53"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "GUXm2W8kDCKMza6Xf-QB4",
      "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:ea5ad809-99a9-4e5f-8345-e80a1e5521d9",
      "columns": [
        "Mavennet",
        "Tradeverifyd",
        "decentralgabe"
      ],
      "rows": [
        {
          "id": "17. SD-JWT Basic Credential Issuance",
          "cells": [
            {
              "cell": {
                "rowId": "17. SD-JWT Basic Credential Issuance",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "17. SD-JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:e3f59802-fff2-498e-94b0-24e5a8de8e29",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 95001,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "17. SD-JWT Basic Credential Issuance"
              },
              "duration": 1270,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "17. SD-JWT Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:d0ca9421-6469-4882-9407-13a81fc04d23",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 106800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "17. SD-JWT Basic Credential Issuance"
              },
              "duration": 402,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "18. SD-JWT Complex Credential Issuance",
          "cells": [
            {
              "cell": {
                "rowId": "18. SD-JWT Complex Credential Issuance",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "18. SD-JWT Complex Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:dc26e4d7-8f44-4869-9dae-296df35528ab",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 96276,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "18. SD-JWT Complex Credential Issuance"
              },
              "duration": 1275,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "18. SD-JWT Complex Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:5d190795-0d5f-4ded-892e-7d9a0f4df185",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107207,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "18. SD-JWT Complex Credential Issuance"
              },
              "duration": 406,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "19. SD-JWT Presentation Issuance",
          "cells": [
            {
              "cell": {
                "rowId": "19. SD-JWT Presentation Issuance",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "19. SD-JWT Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:64d370fa-9f83-452b-bb3e-7dbfe273436f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 97549,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "19. SD-JWT Presentation Issuance"
              },
              "duration": 1273,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "19. SD-JWT Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:9650ad22-6470-4e1e-b5c8-9fe5745bb489",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 107611,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "19. SD-JWT Presentation Issuance"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "20. SD-JWT Basic Credential Verification",
          "cells": [
            {
              "cell": {
                "rowId": "20. SD-JWT Basic Credential Verification",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "20. SD-JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:0697280b-d299-43e5-9228-e6c4965f2c42",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 98811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "20. SD-JWT Basic Credential Verification"
              },
              "duration": 1262,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "20. SD-JWT Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:8517049b-d305-4b09-91c7-4fee0e3fc667",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108011,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "20. SD-JWT Basic Credential Verification"
              },
              "duration": 400,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "21. SD-JWT Complex Credential Verification",
          "cells": [
            {
              "cell": {
                "rowId": "21. SD-JWT Complex Credential Verification",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "21. SD-JWT Complex Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:799e7db4-8c2a-45ce-8185-7ce4ec77b821",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 100069,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "21. SD-JWT Complex Credential Verification"
              },
              "duration": 1258,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "21. SD-JWT Complex Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:4deaa794-de80-473c-ac13-41c1c2535031",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "21. SD-JWT Complex Credential Verification"
              },
              "duration": 405,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "22. SD-JWT Presentation Verification",
          "cells": [
            {
              "cell": {
                "rowId": "22. SD-JWT Presentation Verification",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "22. SD-JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:b2bcbd35-f5a3-4d6d-ac15-11e38f6a360c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 101353,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "22. SD-JWT Presentation Verification"
              },
              "duration": 1284,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "22. SD-JWT Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:142c41f6-1007-4522-a434-070c28378111",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 108821,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "22. SD-JWT Presentation Verification"
              },
              "duration": 405,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "23. SD-JWT Credential With an Invalid Signature",
          "cells": [
            {
              "cell": {
                "rowId": "23. SD-JWT Credential With an Invalid Signature",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "23. SD-JWT Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:46a8076b-a7b3-4b30-9daf-d881e9876685",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 102603,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "23. SD-JWT Credential With an Invalid Signature"
              },
              "duration": 1250,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "23. SD-JWT Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:2cd0ae69-c493-4b61-a2ed-3b6885991a3e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109234,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "23. SD-JWT Credential With an Invalid Signature"
              },
              "duration": 413,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "24. SD-JWT Credential with an Invalid Media Type",
          "cells": [
            {
              "cell": {
                "rowId": "24. SD-JWT Credential with an Invalid Media Type",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "24. SD-JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:73fab0df-42e1-4f05-bb00-7719cd4161c4",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 103873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "24. SD-JWT Credential with an Invalid Media Type"
              },
              "duration": 1270,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "24. SD-JWT Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:2705eff9-8aa8-435a-aed2-6555a53be221",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 109634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "24. SD-JWT Credential with an Invalid Media Type"
              },
              "duration": 401,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "25. SD-JWT Presentation with an Invalid Media Type",
          "cells": [
            {
              "cell": {
                "rowId": "25. SD-JWT Presentation with an Invalid Media Type",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "25. SD-JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:d1d4d10f-2017-4f4d-83dc-93ea43eabceb",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 105128,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "25. SD-JWT Presentation with an Invalid Media Type"
              },
              "duration": 1255,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "25. SD-JWT Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:71e86bfc-74cf-4bd4-a17c-9c3d7ee7bc8a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110041,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "25. SD-JWT Presentation with an Invalid Media Type"
              },
              "duration": 406,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "26. SD-JWT Presentation with Invalid Credentials",
          "cells": [
            {
              "cell": {
                "rowId": "26. SD-JWT Presentation with Invalid Credentials",
                "colId": "Mavennet"
              },
              "state": "pending",
              "err": {
                "message": "Test skipped."
              }
            },
            {
              "type": "test",
              "title": "26. SD-JWT Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "_2j9-geoANUQ_2CgAvDPV",
              "ctx": null,
              "_testId": "urn:uuid:ae565d78-f57f-4ec4-9df0-1e9fb2cf85a7",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 106398,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "26. SD-JWT Presentation with Invalid Credentials"
              },
              "duration": 1270,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "26. SD-JWT Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "rOq4jAnfTpDJ7BmTXA7HY",
              "ctx": null,
              "_testId": "urn:uuid:d3da5bb9-72b3-465b-a7cd-af6e5398f9f3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 110444,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "26. SD-JWT Presentation with Invalid Credentials"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "COSE Tests",
      "ctx": null,
      "suites": [
        {
          "title": "Mavennet",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "27. COSE Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:85ad58db-c920-46dd-a0c8-6793f7e9374c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111224,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "27. COSE Basic Credential Issuance"
              },
              "duration": 780,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "28. COSE Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:85352016-de4f-4e5e-a461-046061ed4800",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 112005,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "28. COSE Basic Presentation Issuance"
              },
              "duration": 780,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "29. COSE Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:0b0ac98b-4f5b-441b-b3c0-291d85327c7f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 112774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "29. COSE Basic Credential Verification"
              },
              "duration": 770,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "30. COSE Credential Verification Incorrect Encoding",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:aa108e8b-8669-4c58-88da-c502842eb43b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 113560,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "30. COSE Credential Verification Incorrect Encoding"
              },
              "duration": 785,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "31. COSE Basic Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:f2901795-4858-48f3-929d-d626e01cd074",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 114327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "31. COSE Basic Presentation Verification"
              },
              "duration": 767,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "32. COSE Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:3d4ac7fb-a3b0-4cbb-bb60-1e25f16d35ee",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 115108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "32. COSE Credential With an Invalid Signature"
              },
              "duration": 781,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "33. COSE Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:3151ca3c-4ac1-4973-b4c1-998432d6f8da",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 115884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "33. COSE Credential with an Invalid Media Type"
              },
              "duration": 776,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "34. COSE Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:2e6753bc-71db-4116-9f2d-ad7a71870e64",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 116676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "34. COSE Presentation with an Invalid Media Type"
              },
              "duration": 792,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "35. COSE Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:8003b1ab-4116-4d67-9b25-5d3d49e40cd1",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 117452,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "35. COSE Presentation with Invalid Credentials"
              },
              "duration": 777,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'success' to equal 'failure'",
                "showDiff": true,
                "actual": "success",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'success' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js:46:20)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Nm2u79Fj0V1WRh81Krb0i",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:1cd9504d-8f1c-4d3c-933a-23476d005596"
        },
        {
          "title": "Tradeverifyd",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "27. COSE Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:420fe59e-a67e-4ee5-b5ff-23d37a9c8e2f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 118714,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "27. COSE Basic Credential Issuance"
              },
              "duration": 1260,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "28. COSE Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:046c3d55-4ce1-4ee8-8d4d-e0f042e96605",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 119993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "28. COSE Basic Presentation Issuance"
              },
              "duration": 1279,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "29. COSE Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:2ae4deb7-7163-493a-a8fd-bd2d6213e4a6",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 121265,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "29. COSE Basic Credential Verification"
              },
              "duration": 1272,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "30. COSE Credential Verification Incorrect Encoding",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:b7b33224-9e22-48f6-ae5d-b0de0ad0ae97",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 122527,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "30. COSE Credential Verification Incorrect Encoding"
              },
              "duration": 1262,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "31. COSE Basic Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:af5d9e3c-0744-4799-8a2a-261fdb090191",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 123811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "31. COSE Basic Presentation Verification"
              },
              "duration": 1284,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "32. COSE Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:81e00f99-bd17-4a58-8976-90da615b2802",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 125068,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "32. COSE Credential With an Invalid Signature"
              },
              "duration": 1257,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "33. COSE Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:53779d85-448c-47ee-b0aa-c85d1d649854",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 126334,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "33. COSE Credential with an Invalid Media Type"
              },
              "duration": 1266,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "34. COSE Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:0c8e9f43-b0a6-4341-889b-457fce213ff3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 127586,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "34. COSE Presentation with an Invalid Media Type"
              },
              "duration": 1252,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "35. COSE Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:e8ef42d1-fec6-4d8d-a12e-c48228b07f5d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 128863,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "35. COSE Presentation with Invalid Credentials"
              },
              "duration": 1277,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Nm2u79Fj0V1WRh81Krb0i",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:1bba7a59-a26c-4329-9511-e14fa3811760"
        },
        {
          "title": "decentralgabe",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "27. COSE Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:fef3a235-a171-45bb-92f0-175d0835d880",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "27. COSE Basic Credential Issuance"
              },
              "duration": 409,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "28. COSE Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:9fd1b684-0248-47be-943c-8d5a0bd77219",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "28. COSE Basic Presentation Issuance"
              },
              "duration": 411,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "29. COSE Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:f68caa51-a91b-4526-bc62-8e973e24f2b1",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130087,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "29. COSE Basic Credential Verification"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "30. COSE Credential Verification Incorrect Encoding",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:e0ccfd29-3545-4fb8-8e5f-5257e6667f98",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130495,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "30. COSE Credential Verification Incorrect Encoding"
              },
              "duration": 408,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "31. COSE Basic Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:b525c7e9-ea91-4c38-b332-2f86fa860163",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130907,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "31. COSE Basic Presentation Verification"
              },
              "duration": 412,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "32. COSE Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:73870452-38e7-4be0-be7f-bd175d60982b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131319,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "32. COSE Credential With an Invalid Signature"
              },
              "duration": 412,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "33. COSE Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:9d87bcc7-5c46-4bee-8806-3630b7f1f53a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131722,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "33. COSE Credential with an Invalid Media Type"
              },
              "duration": 403,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "34. COSE Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:32c05f53-fe70-4440-8600-c95647b90a7e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 132127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "34. COSE Presentation with an Invalid Media Type"
              },
              "duration": 405,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "35. COSE Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:7faec84c-638c-4947-91e1-53e76b597d6e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 132533,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "35. COSE Presentation with Invalid Credentials"
              },
              "duration": 406,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 150000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "Nm2u79Fj0V1WRh81Krb0i",
          "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
          "_testId": "urn:uuid:6663486e-8589-4c70-80aa-c19b239b7547"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 150000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "GUXm2W8kDCKMza6Xf-QB4",
      "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Implementation",
      "_testId": "urn:uuid:f4e378ee-13e7-412e-9427-33da40608737",
      "columns": [
        "Mavennet",
        "Tradeverifyd",
        "decentralgabe"
      ],
      "rows": [
        {
          "id": "27. COSE Basic Credential Issuance",
          "cells": [
            {
              "type": "test",
              "title": "27. COSE Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:85ad58db-c920-46dd-a0c8-6793f7e9374c",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 111224,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "27. COSE Basic Credential Issuance"
              },
              "duration": 780,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "27. COSE Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:420fe59e-a67e-4ee5-b5ff-23d37a9c8e2f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 118714,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "27. COSE Basic Credential Issuance"
              },
              "duration": 1260,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "27. COSE Basic Credential Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:fef3a235-a171-45bb-92f0-175d0835d880",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "27. COSE Basic Credential Issuance"
              },
              "duration": 409,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "28. COSE Basic Presentation Issuance",
          "cells": [
            {
              "type": "test",
              "title": "28. COSE Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:85352016-de4f-4e5e-a461-046061ed4800",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 112005,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "28. COSE Basic Presentation Issuance"
              },
              "duration": 780,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "28. COSE Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:046c3d55-4ce1-4ee8-8d4d-e0f042e96605",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 119993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "28. COSE Basic Presentation Issuance"
              },
              "duration": 1279,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "28. COSE Basic Presentation Issuance",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:9fd1b684-0248-47be-943c-8d5a0bd77219",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 129683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "28. COSE Basic Presentation Issuance"
              },
              "duration": 411,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "29. COSE Basic Credential Verification",
          "cells": [
            {
              "type": "test",
              "title": "29. COSE Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:0b0ac98b-4f5b-441b-b3c0-291d85327c7f",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 112774,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "29. COSE Basic Credential Verification"
              },
              "duration": 770,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "29. COSE Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:2ae4deb7-7163-493a-a8fd-bd2d6213e4a6",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 121265,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "29. COSE Basic Credential Verification"
              },
              "duration": 1272,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "29. COSE Basic Credential Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:f68caa51-a91b-4526-bc62-8e973e24f2b1",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130087,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "29. COSE Basic Credential Verification"
              },
              "duration": 404,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "30. COSE Credential Verification Incorrect Encoding",
          "cells": [
            {
              "type": "test",
              "title": "30. COSE Credential Verification Incorrect Encoding",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:aa108e8b-8669-4c58-88da-c502842eb43b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 113560,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "30. COSE Credential Verification Incorrect Encoding"
              },
              "duration": 785,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "30. COSE Credential Verification Incorrect Encoding",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:b7b33224-9e22-48f6-ae5d-b0de0ad0ae97",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 122527,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "30. COSE Credential Verification Incorrect Encoding"
              },
              "duration": 1262,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "30. COSE Credential Verification Incorrect Encoding",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:e0ccfd29-3545-4fb8-8e5f-5257e6667f98",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130495,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "30. COSE Credential Verification Incorrect Encoding"
              },
              "duration": 408,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "31. COSE Basic Presentation Verification",
          "cells": [
            {
              "type": "test",
              "title": "31. COSE Basic Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:f2901795-4858-48f3-929d-d626e01cd074",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 114327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "31. COSE Basic Presentation Verification"
              },
              "duration": 767,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "31. COSE Basic Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:af5d9e3c-0744-4799-8a2a-261fdb090191",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 123811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "31. COSE Basic Presentation Verification"
              },
              "duration": 1284,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "31. COSE Basic Presentation Verification",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:b525c7e9-ea91-4c38-b332-2f86fa860163",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 130907,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "31. COSE Basic Presentation Verification"
              },
              "duration": 412,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "32. COSE Credential With an Invalid Signature",
          "cells": [
            {
              "type": "test",
              "title": "32. COSE Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:3d4ac7fb-a3b0-4cbb-bb60-1e25f16d35ee",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 115108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "32. COSE Credential With an Invalid Signature"
              },
              "duration": 781,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "32. COSE Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:81e00f99-bd17-4a58-8976-90da615b2802",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 125068,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "32. COSE Credential With an Invalid Signature"
              },
              "duration": 1257,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "32. COSE Credential With an Invalid Signature",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:73870452-38e7-4be0-be7f-bd175d60982b",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131319,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "32. COSE Credential With an Invalid Signature"
              },
              "duration": 412,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "33. COSE Credential with an Invalid Media Type",
          "cells": [
            {
              "type": "test",
              "title": "33. COSE Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:3151ca3c-4ac1-4973-b4c1-998432d6f8da",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 115884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "33. COSE Credential with an Invalid Media Type"
              },
              "duration": 776,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "33. COSE Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:53779d85-448c-47ee-b0aa-c85d1d649854",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 126334,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "33. COSE Credential with an Invalid Media Type"
              },
              "duration": 1266,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "33. COSE Credential with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:9d87bcc7-5c46-4bee-8806-3630b7f1f53a",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 131722,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "33. COSE Credential with an Invalid Media Type"
              },
              "duration": 403,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "34. COSE Presentation with an Invalid Media Type",
          "cells": [
            {
              "type": "test",
              "title": "34. COSE Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:2e6753bc-71db-4116-9f2d-ad7a71870e64",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 116676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "34. COSE Presentation with an Invalid Media Type"
              },
              "duration": 792,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "34. COSE Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:0c8e9f43-b0a6-4341-889b-457fce213ff3",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 127586,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "34. COSE Presentation with an Invalid Media Type"
              },
              "duration": 1252,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "34. COSE Presentation with an Invalid Media Type",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:32c05f53-fe70-4440-8600-c95647b90a7e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 132127,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "34. COSE Presentation with an Invalid Media Type"
              },
              "duration": 405,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "35. COSE Presentation with Invalid Credentials",
          "cells": [
            {
              "type": "test",
              "title": "35. COSE Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "IOijSSyoiyzp1BnfYCB6b",
              "ctx": null,
              "_testId": "urn:uuid:8003b1ab-4116-4d67-9b25-5d3d49e40cd1",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 117452,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Mavennet",
                "rowId": "35. COSE Presentation with Invalid Credentials"
              },
              "duration": 777,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected 'success' to equal 'failure'",
                "showDiff": true,
                "actual": "success",
                "expected": "failure",
                "operator": "strictEqual",
                "stack": "AssertionError: expected 'success' to equal 'failure'\n    at should.equal (node_modules/chai/lib/chai/interface/should.js:98:35)\n    at Context.<anonymous> (file:///home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js:46:20)"
              }
            },
            {
              "type": "test",
              "title": "35. COSE Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "VkNU1W1E1EO6RZy4S64yL",
              "ctx": null,
              "_testId": "urn:uuid:e8ef42d1-fec6-4d8d-a12e-c48228b07f5d",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 128863,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "Tradeverifyd",
                "rowId": "35. COSE Presentation with Invalid Credentials"
              },
              "duration": 1277,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "35. COSE Presentation with Invalid Credentials",
              "body": "async function() {\n            if (!features[requiredFeature]) {\n              console.log(`Skipping test \"${testName}\" for ${name} due to missing feature: ${requiredFeature}`);\n              this.skip();\n              return;\n            }\n\n            console.log(`Running test: ${testName} for implementation: ${name}`);\n            await generateTestResults(name, testConfig);\n            this.test.cell = {columnId: name, rowId: testName};\n            const result = await checkTestResults(name, testConfig);\n            console.log(`Test result for ${name} - ${testName}: ${result}`);\n            should.equal(result, testConfig.expected_result);\n\n            // Log the test result in a format that matches the report generator's expectations\n            console.log(`Reporter data: ${this.test.cell.columnId},${this.test.cell.rowId},${result}`);\n          }",
              "async": 0,
              "sync": true,
              "_timeout": 150000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-jose-cose-test-suite/vc-jose-cose-test-suite/tests/test-runner.js",
              "parent": "m_R8vzUKPABkV0u_KnoI-",
              "ctx": null,
              "_testId": "urn:uuid:7faec84c-638c-4947-91e1-53e76b597d6e",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 132533,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "cell": {
                "columnId": "decentralgabe",
                "rowId": "35. COSE Presentation with Invalid Credentials"
              },
              "duration": 406,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "shortName": "vc-jose-cose-test-suite",
    "group": "vc",
    "specStatus": "NOTE",
    "subtitle": "Securing Verifiable Credentials using JOSE and COSE Interoperability Report",
    "github": "https://github.com/w3c/vc-jose-cose-test-suite",
    "edDraftURI": "https://w3c.github.io/vc-jose-cose-test-suite/",
    "doJsonLd": true,
    "includePermalinks": false,
    "otherLinks": [
      {
        "key": "Related Specifications",
        "data": [
          {
            "value": "The Verifiable Credentials Data Model v2.0",
            "href": "https://www.w3.org/TR/vc-data-model-2.0/"
          },
          {
            "value": "Securing Verifiable Credentials using JOSE and COSE",
            "href": "https://www.w3.org/TR/vc-jose-cose/"
          }
        ]
      }
    ],
    "editors": [
      {
        "name": "Michael Jones",
        "url": "https://github.com/selfissued",
        "company": "Self-Issued Consulting",
        "companyURL": "https://self-issued.consulting"
      },
      {
        "name": "Michael Prorock",
        "url": "https://github.com/mprorock",
        "company": "Mesur.io",
        "companyURL": "https://mesur.io/"
      },
      {
        "name": "Gabe Cohen",
        "url": "https://github.com/decentralgabe",
        "company": "Invited Expert"
      }
    ],
    "authors": [
      {
        "name": "Michael Jones",
        "url": "https://github.com/selfissued",
        "company": "Self-Issued Consulting",
        "companyURL": "https://self-issued.consulting"
      },
      {
        "name": "Michael Prorock",
        "url": "https://github.com/mprorock",
        "company": "Mesur.io",
        "companyURL": "https://mesur.io/"
      },
      {
        "name": "Gabe Cohen",
        "url": "https://github.com/decentralgabe",
        "company": "Invited Expert"
      }
    ]
  },
  "title": "VC JOSE COSE Test Suite",
  "stats": [
    "Tests passed 94/95 98%",
    "Tests failed 1/95 2%",
    "Failures 1",
    "Tests skipped 10",
    "Total tests 105"
  ],
  "statusMarkLabels": {
    "pending": {
      "icon": "🚫",
      "label": "Pending"
    },
    "passed": {
      "icon": "✓",
      "label": "Passed"
    },
    "failed": {
      "icon": "❌",
      "label": "Failed"
    },
    "accessDenied": {
      "icon": "⊘",
      "label": "Access Denied"
    },
    "timeout": {
      "icon": "⏱",
      "label": "Timeout"
    },
    "notImplemented": {
      "icon": "—",
      "label": "Not Implemented"
    }
  }
}